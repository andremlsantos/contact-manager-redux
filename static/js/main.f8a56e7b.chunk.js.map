{"version":3,"sources":["components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contact","name","email","phone","className","onClick","setState","style","cursor","float","color","bind","Link","to","marginRight","Component","connect","dispatch","a","Axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","key","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","addContact","history","push","target","post","EditContact","updContact","match","params","updateContact","getContact","nextProps","nextState","protoTypes","PropTypes","object","isRequired","func","put","Header","branding","href","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Switch","Route","exact","path","component","About","NotFound","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f8a56e7b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../actions/contactActions\";\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false,\n    };\n\n    onDeleteClick = (id) => {\n        this.props.deleteContact(id);\n    };\n\n    render() {\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <div className=\"card card-body mb-3\">\n                <h4>\n                    {name}{\" \"}\n                    <i\n                        onClick={() =>\n                            this.setState({\n                                showContactInfo: !this.state.showContactInfo,\n                            })\n                        }\n                        className=\"fas fa-sort-down\"\n                        style={{ cursor: \"pointer\" }}\n                    />\n                    <i\n                        className=\"fas fa-times\"\n                        style={{\n                            cursor: \"pointer\",\n                            float: \"right\",\n                            color: \"red\",\n                        }}\n                        onClick={this.onDeleteClick.bind(this, id)}\n                    />\n                    <Link to={`contact/edit/${id}`}>\n                        <i\n                            className=\"fas fa-pencil-alt\"\n                            style={{\n                                cursor: \"pointer\",\n                                float: \"right\",\n                                color: \"black\",\n                                marginRight: \"1rem\",\n                            }}\n                        />\n                    </Link>\n                </h4>\n                {showContactInfo ? (\n                    <ul className=\"list-group\">\n                        <li className=\"list-group-item\">Email: {email}</li>\n                        <li className=\"list-group-item\">Phone: {phone}</li>\n                    </ul>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n    deleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteContact })(Contact);\n","import {\r\n    GET_CONTACTS,\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    GET_CONTACT,\r\n    UPDATE_CONTACT,\r\n} from \"./types\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n    const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data,\r\n    });\r\n};\r\n\r\nexport const getContact = (id) => async (dispatch) => {\r\n    const res = await Axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    dispatch({\r\n        type: GET_CONTACT,\r\n        payload: res.data,\r\n    });\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await Axios.delete(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id,\r\n        });\r\n    }\r\n};\r\n\r\nexport const addContact = (contact) => async (dispatch) => {\r\n    const res = await Axios.post(\r\n        \"https://jsonplaceholder.typicode.com/users/\",\r\n        contact\r\n    );\r\n\r\n    dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: res.data,\r\n    });\r\n};\r\n\r\nexport const updateContact = (contact) => async (dispatch) => {\r\n    debugger;\r\n    const res = await Axios.put(\r\n        `https://jsonplaceholder.typicode.com/users/${contact.id}`,\r\n        contact\r\n    );\r\n\r\n    dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: res.data,\r\n    });\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../actions/contactActions\";\nimport PropTypes from \"prop-types\";\n\nclass Contacts extends Component {\n    componentDidMount() {\n        this.props.getContacts();\n    }\n\n    render() {\n        const { contacts } = this.props;\n        return (\n            <React.Fragment>\n                <h1 className=\"display-4 mb-2\">\n                    <span className=\"text-danger\">Contact</span> List\n                </h1>\n                {contacts.map((contact) => (\n                    <Contact key={contact.id} contact={contact} />\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    getContacts: PropTypes.func.isRequired,\n};\n\n// we can access with this.props.contacts\nconst mapStateToProps = (state) => ({\n    contacts: state.contact.contacts,\n});\n\nexport default connect(mapStateToProps, { getContacts })(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../actions/contactActions\";\n\nclass AddContact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {},\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        // Check For Errors\n        if (name === \"\") {\n            this.setState({ errors: { name: \"Name is required\" } });\n            return;\n        }\n\n        if (email === \"\") {\n            this.setState({ errors: { email: \"Email is required\" } });\n            return;\n        }\n\n        if (phone === \"\") {\n            this.setState({ errors: { phone: \"Phone is required\" } });\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone,\n        };\n\n        //// SUBMIT CONTACT ////\n        this.props.addContact(newContact);\n\n        // Clear State\n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors: {},\n        });\n\n        this.props.history.push(\"/\");\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <div className=\"card mb-3\">\n                <div className=\"card-header\">Add Contact</div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit}>\n                        <TextInputGroup\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Enter Name\"\n                            value={name}\n                            onChange={this.onChange}\n                            error={errors.name}\n                        />\n                        <TextInputGroup\n                            label=\"Email\"\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"Enter Email\"\n                            value={email}\n                            onChange={this.onChange}\n                            error={errors.email}\n                        />\n                        <TextInputGroup\n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"Enter Phone\"\n                            value={phone}\n                            onChange={this.onChange}\n                            error={errors.phone}\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Add Contact\"\n                            className=\"btn btn-light btn-block\"\n                        />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddContact.propTypes = {\n    addContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addContact })(AddContact);\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getContact, updateContact } from \"../../actions/contactActions\";\n\nclass EditContact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {},\n    };\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getContact(id);\n    }\n\n    componentWillReceiveProps(nextProps, nextState) {\n        const { name, email, phone } = nextProps.contact;\n        this.setState({\n            name,\n            email,\n            phone,\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        // Check For Errors\n        if (name === \"\") {\n            this.setState({ errors: { name: \"Name is required\" } });\n            return;\n        }\n\n        if (email === \"\") {\n            this.setState({ errors: { email: \"Email is required\" } });\n            return;\n        }\n\n        if (phone === \"\") {\n            this.setState({ errors: { phone: \"Phone is required\" } });\n            return;\n        }\n\n        const { id } = this.props.match.params;\n        const updContact = {\n            id: id,\n            name,\n            email,\n            phone,\n        };\n\n        //// UPDATE CONTACT ////\n        this.props.updateContact(updContact);\n\n        // Clear State\n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors: {},\n        });\n\n        this.props.history.push(\"/\");\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <div className=\"card mb-3\">\n                <div className=\"card-header\">Edit Contact</div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit}>\n                        <TextInputGroup\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Enter Name\"\n                            value={name}\n                            onChange={this.onChange}\n                            error={errors.name}\n                        />\n                        <TextInputGroup\n                            label=\"Email\"\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"Enter Email\"\n                            value={email}\n                            onChange={this.onChange}\n                            error={errors.email}\n                        />\n                        <TextInputGroup\n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"Enter Phone\"\n                            value={phone}\n                            onChange={this.onChange}\n                            error={errors.phone}\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update Contact\"\n                            className=\"btn btn-light btn-block\"\n                        />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nEditContact.protoTypes = {\n    contact: PropTypes.object.isRequired,\n    getContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    contact: state.contact.contact,\n});\n\nexport default connect(mapStateToProps, { getContact, updateContact })(\n    EditContact\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import {\r\n    GET_CONTACTS,\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    GET_CONTACT,\r\n    UPDATE_CONTACT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    contacts: [],\r\n    contact: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload,\r\n            };\r\n        case GET_CONTACT:\r\n            return {\r\n                ...state,\r\n                contact: action.payload,\r\n            };\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map((contact) =>\r\n                    contact.id == action.payload.id ? action.payload : contact\r\n                ),\r\n            };\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    (contact) => contact.id !== action.payload\r\n                ),\r\n            };\r\n        case ADD_CONTACT:\r\n            return { ...state, contacts: [action.payload, ...state.contacts] };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n    contact: contactReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts} />\n                                <Route\n                                    exact\n                                    path=\"/contact/add\"\n                                    component={AddContact}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/contact/edit/:id\"\n                                    component={EditContact}\n                                />\n                                <Route exact path=\"/about\" component={About} />\n                                <Route component={NotFound} />\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}